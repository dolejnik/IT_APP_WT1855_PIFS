@using BusinessLogic.Enums
@using ServiceOfElectronicDevices.Helpers
@model BusinessLogic.Models.OrderDetailsViewModel

@{
    ViewBag.Title = "OrderDetails";
    double testowa = 0;
}

<hr />
<div style="color:black; -ms-opacity:0.9; opacity:0.9">
    <div class="panel panel-info">
        <div class="panel-heading">
            <h3 class="panel-title">Szczegóły zgłoszenia</h3>
        </div>

        <div class="panel-body">

            @if (!(String.IsNullOrEmpty(@Model.Order.ClientName)))
            {<text>Login: </text> @Model.Order.ClientName}

            @if (!(String.IsNullOrEmpty(@Model.Order.ClientEmail)))
            {<hr /><text>Email: </text> @Model.Order.ClientEmail}

            @if (!(String.IsNullOrEmpty(@Model.Order.ClientPhone)))
            {<hr /><text>Telefon: </text> @Model.Order.ClientPhone}

            @if (!(String.IsNullOrEmpty(@Model.Order.DeviceBrand)))
            {<hr /><text>Marka: </text> @Model.Order.DeviceBrand}

            @if (!(String.IsNullOrEmpty(@Model.Order.DeviceModel)))
            {<hr /><text>Model: </text> @Model.Order.DeviceModel}

            @if (!(String.IsNullOrEmpty(@Model.Description)))
            {<hr /><text>Opis: </text> @Model.Description}

        </div>
    </div>









    <div class="panel panel-info">

        <div class="panel-body">

            <table class="table table-striped" style="background-color:white">
                <thead>
                    <tr>
                        <th>Stan</th>
                        <th>Opis</th>
                        <th>Koszt</th>
                        <th>Data rozpoczęcia</th>
                        <th>Data zakończenia</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var task in Model.Tasks)
                    {
                        <tr>
                            <td>@task.Task.State.GetAttribute()</td>
                            <td>@task.Task.Description</td>
                            <td>@task.Task.Price</td>
                            <td>@task.Task.DateFrom</td>
                            <td>@task.Task.DateTo</td>
                        </tr>
                        testowa += (testowa + task.Task.Price);
                        if (task.ComponentsList.Any())
                        {
                            if (task.Task.State == OrderStates.WaitingForClient)
                            {
                                <tr><td colspan="2"></td><td colspan="3">Wybierz część z poniższych:</td></tr>
                            }
                            <tr>

                                <td></td>
                                <td></td>
                                <td>Marka:</td>
                                <td>Model:</td>
                                <td>Cena:</td>
                            </tr>


                            foreach (var device in task.ComponentsList)
                            {
                                <tr>
                                    @using (Html.BeginForm("ChooseComponent", "Order", new {orderId = task.Task.OrderId , taskId = task.Task.Id , componentId = device.Id },FormMethod.Post, null ))
                                    {
                                    @Html.AntiForgeryToken()
                                        @*@Html.Hidden("orderId", task.Task.OrderId)
                                        @Html.Hidden("TaskId", task.Task.Id)
                                        @Html.Hidden("compontntId", device.Id)*@
                                        <td></td>
                                        if (task.Task.State == OrderStates.WaitingForClient && task.Task.DateTo == null)
                                        {
                                            <td><input type="submit" class="btn btn-default" value="Wybierz" /></td>
                                        }
                                        else
                                        {
                                            <td></td>
                                        }
                                        <td>@device.Brand</td>
                                        <td>@device.Model</td>
                                        <td>@device.Price</td>

                                    }

                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>

            <table>
                <tr>
                    <td>Calkowita cena to: </td>
                    <td>@testowa</td>
                </tr>

            </table>

            @if (User.IsInRole("Employee") && Model.Tasks.Last().Task.State != OrderStates.Done && Model.Tasks.Last().Task.State != OrderStates.Deleted)
            {
                @Html.ActionLink("Aktualizuj", "NewTask", "Order", new { id = @Model.Order.Id }, null)
            }
        </div>
    </div>


</div>